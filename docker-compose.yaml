version: "3"
volumes:
  -mongo-data:
    driver: local
services:
  library-cms-mongo-setup:
    container_name: library-cms-mongo-replica-setup
    image: library-cms-mongo:latest
    restart: on-failure
    volumes:
      - ./docker/mongo/setup.sh:/scripts/mongo-setup.sh
    entrypoint: [ "bash", "/scripts/mongo-setup.sh" ]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    depends_on:
      - library-cms-mongo
  library-cms-mongo:
    image: library-cms-mongo:latest
    container_name: library-cms-mongo
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - -mongo-data:/data/db
#      - ./docker/replica.key:/auth/file.key
    restart: on-failure
    command: "--bind_ip_all --keyFile /opt/replica.key --replSet rs0"
    healthcheck:
      test: echo 'rs.status().ok' | mongosh --port 27017 -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 10s
  library-cms-app:
    image: library-cms-app:latest
    container_name: library-cms-app
    ports:
      - 8000:8000
    depends_on:
      library-cms-mongo:
        condition: service_healthy
